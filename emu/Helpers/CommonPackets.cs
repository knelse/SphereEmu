namespace emu.Helpers;

public static class CommonPackets
{
    public static readonly byte[]
        ReadyToLoadInitialData = { 0x0a, 0x00, 0xc8, 0x00, 0x14, 0x05, 0x00, 0x00, 0x1f, 0x42};

    public static byte[] ServerCredentials(ushort playerIndex)
    {
        var currentSphereTime = TimeHelper.GetCurrentSphereDateTime();
        // ingame time shows hours and minutes, we'll ignore seconds
        var minutes_last4 = (byte) ((currentSphereTime.Minute & 0b1111) << 4);
        // 1-4 minutes 5-8 idk 
        var firstDateByte = (byte) (minutes_last4 + 0b1000);
        var minutes_first2 = (byte) ((currentSphereTime.Minute & 0b110000) >> 4);
        var hours = (byte) (currentSphereTime.Hour << 2);
        var days_last1 = (byte) ((currentSphereTime.Day % 2) << 7);
        // 1 days 2-6 hours 7-8 minutes
        var secondDateByte = (byte) (days_last1 + hours + minutes_first2);
        var days_first4 = (byte) ((currentSphereTime.Day & 0b11110) >> 1);
        var month = (byte) (currentSphereTime.Month << 4);
        // 1-4 months 5-8 days
        var thirdDateByte = (byte) (month + days_first4);
        var years_last8 = (byte)(currentSphereTime.Year & 0b11111111);
        var years_first1 = (byte)((currentSphereTime.Year & 0b100000000) >> 8);
        // quite likely it has more digits but 20+ irl years should be enough
        var fourthDateByte = (byte)(0b00110100 + years_first1);

        return new byte [] {0x38, 0x00, 0x2c, 0x01, 0x00, 0x00, BitHelper.GetSecondByte(playerIndex), 
            BitHelper.GetFirstByte(playerIndex), 0x6f, 0x08, 0x40, 0x20, 0x10, firstDateByte, secondDateByte, 
            thirdDateByte, years_last8, fourthDateByte, 0x7c, 0x12, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
            0x1a, 0x3b, 0x12, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 
            0x00, 0x00, 0x00, 0x8d, 0x9d, 0x01, 0x00, 0x00, 0x00};
    }

    public static byte[] CharacterSelectStartData(ushort playerIndex)
    {
        return new byte[] {0x52, 0x00, 0x2c, 0x01, 0x00, 0x00, BitHelper.GetSecondByte(playerIndex), 
            BitHelper.GetFirstByte(playerIndex), 0x6f, 0x08, 0x40, 0x80, 0x10, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    }
}